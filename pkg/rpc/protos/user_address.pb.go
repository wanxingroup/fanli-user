// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_address.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 地址信息
type Address struct {
	// 主键
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// userId
	UserId uint64 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	// 收货人
	ReceiverName string `protobuf:"bytes,3,opt,name=receiverName" json:"receiverName,omitempty"`
	// 性别
	Gender uint64 `protobuf:"varint,4,opt,name=gender" json:"gender,omitempty"`
	// 国家
	Country string `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	// 省份
	Province string `protobuf:"bytes,6,opt,name=province" json:"province,omitempty"`
	// 城市
	City string `protobuf:"bytes,7,opt,name=city" json:"city,omitempty"`
	// 区县
	District string `protobuf:"bytes,8,opt,name=district" json:"district,omitempty"`
	// 详细地址
	Address string `protobuf:"bytes,9,opt,name=address" json:"address,omitempty"`
	// 标签1家，2公司，3学校
	Tag uint32 `protobuf:"varint,10,opt,name=tag" json:"tag,omitempty"`
	// 手机号
	Mobile string `protobuf:"bytes,11,opt,name=mobile" json:"mobile,omitempty"`
	// 是否默认地址1：普通，2默认送货
	Type uint32 `protobuf:"varint,12,opt,name=type" json:"type,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Address) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Address) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Address) GetReceiverName() string {
	if m != nil {
		return m.ReceiverName
	}
	return ""
}

func (m *Address) GetGender() uint64 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetDistrict() string {
	if m != nil {
		return m.District
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetTag() uint32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *Address) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Address) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

// 获取用户地址列表 - 请求
type GetAddressListRequest struct {
	// UserId
	UserId uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	// 页码
	Page uint64 `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
	// 条数
	PageSize uint64 `protobuf:"varint,3,opt,name=pageSize" json:"pageSize,omitempty"`
	// 最后一条 ID
	LastId uint64 `protobuf:"varint,4,opt,name=lastId" json:"lastId,omitempty"`
}

func (m *GetAddressListRequest) Reset()                    { *m = GetAddressListRequest{} }
func (m *GetAddressListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAddressListRequest) ProtoMessage()               {}
func (*GetAddressListRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetAddressListRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetAddressListRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAddressListRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetAddressListRequest) GetLastId() uint64 {
	if m != nil {
		return m.LastId
	}
	return 0
}

// 获取用户地址列表 - 返回
type GetAddressListReply struct {
	// 错误信息
	Err *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	// 地址列表
	List []*Address `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	// 总数量
	Count uint64 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *GetAddressListReply) Reset()                    { *m = GetAddressListReply{} }
func (m *GetAddressListReply) String() string            { return proto.CompactTextString(m) }
func (*GetAddressListReply) ProtoMessage()               {}
func (*GetAddressListReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetAddressListReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *GetAddressListReply) GetList() []*Address {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetAddressListReply) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 获取用户地址 - 请求
type GetAddressInfoRequest struct {
	// UserId
	UserId uint64 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	// AddressId
	AddressId uint64 `protobuf:"varint,2,opt,name=addressId" json:"addressId,omitempty"`
}

func (m *GetAddressInfoRequest) Reset()                    { *m = GetAddressInfoRequest{} }
func (m *GetAddressInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAddressInfoRequest) ProtoMessage()               {}
func (*GetAddressInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *GetAddressInfoRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetAddressInfoRequest) GetAddressId() uint64 {
	if m != nil {
		return m.AddressId
	}
	return 0
}

// 获取用户地址 - 返回
type GetAddressInfoReply struct {
	// 错误信息
	Err *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	// 地址详情
	Address *Address `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *GetAddressInfoReply) Reset()                    { *m = GetAddressInfoReply{} }
func (m *GetAddressInfoReply) String() string            { return proto.CompactTextString(m) }
func (*GetAddressInfoReply) ProtoMessage()               {}
func (*GetAddressInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetAddressInfoReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *GetAddressInfoReply) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// 更新用户地址 - 请求
type SetAddressRequest struct {
	// 地址详情
	Address *Address `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
}

func (m *SetAddressRequest) Reset()                    { *m = SetAddressRequest{} }
func (m *SetAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*SetAddressRequest) ProtoMessage()               {}
func (*SetAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SetAddressRequest) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// 更新用户地址 - 返回
type SetAddressReply struct {
	// 错误信息
	Err *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	// 地址详情
	Address *Address `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *SetAddressReply) Reset()                    { *m = SetAddressReply{} }
func (m *SetAddressReply) String() string            { return proto.CompactTextString(m) }
func (*SetAddressReply) ProtoMessage()               {}
func (*SetAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *SetAddressReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *SetAddressReply) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// 创建用户地址 - 请求
type CreateAddressRequest struct {
	// 地址详情
	Address *Address `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
}

func (m *CreateAddressRequest) Reset()                    { *m = CreateAddressRequest{} }
func (m *CreateAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressRequest) ProtoMessage()               {}
func (*CreateAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *CreateAddressRequest) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// 创建用户地址 - 返回
type CreateAddressReply struct {
	// 错误信息
	Err *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	// 地址详情
	Address *Address `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
}

func (m *CreateAddressReply) Reset()                    { *m = CreateAddressReply{} }
func (m *CreateAddressReply) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressReply) ProtoMessage()               {}
func (*CreateAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *CreateAddressReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *CreateAddressReply) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

// 删除地址 - 请求
type DeleteAddressRequest struct {
	// 地址 ID
	AddressId uint64 `protobuf:"varint,1,opt,name=addressId" json:"addressId,omitempty"`
	// userId
	UserId uint64 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *DeleteAddressRequest) Reset()                    { *m = DeleteAddressRequest{} }
func (m *DeleteAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAddressRequest) ProtoMessage()               {}
func (*DeleteAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *DeleteAddressRequest) GetAddressId() uint64 {
	if m != nil {
		return m.AddressId
	}
	return 0
}

func (m *DeleteAddressRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 删除地址 - 返回
type DeleteAddressReply struct {
	// 错误信息
	Err *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *DeleteAddressReply) Reset()                    { *m = DeleteAddressReply{} }
func (m *DeleteAddressReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteAddressReply) ProtoMessage()               {}
func (*DeleteAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *DeleteAddressReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*Address)(nil), "user.pkg.rpc.protos.Address")
	proto.RegisterType((*GetAddressListRequest)(nil), "user.pkg.rpc.protos.GetAddressListRequest")
	proto.RegisterType((*GetAddressListReply)(nil), "user.pkg.rpc.protos.GetAddressListReply")
	proto.RegisterType((*GetAddressInfoRequest)(nil), "user.pkg.rpc.protos.GetAddressInfoRequest")
	proto.RegisterType((*GetAddressInfoReply)(nil), "user.pkg.rpc.protos.GetAddressInfoReply")
	proto.RegisterType((*SetAddressRequest)(nil), "user.pkg.rpc.protos.SetAddressRequest")
	proto.RegisterType((*SetAddressReply)(nil), "user.pkg.rpc.protos.SetAddressReply")
	proto.RegisterType((*CreateAddressRequest)(nil), "user.pkg.rpc.protos.CreateAddressRequest")
	proto.RegisterType((*CreateAddressReply)(nil), "user.pkg.rpc.protos.CreateAddressReply")
	proto.RegisterType((*DeleteAddressRequest)(nil), "user.pkg.rpc.protos.DeleteAddressRequest")
	proto.RegisterType((*DeleteAddressReply)(nil), "user.pkg.rpc.protos.DeleteAddressReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AddressController service

type AddressControllerClient interface {
	// 用户地址列表
	GetAddressList(ctx context.Context, in *GetAddressListRequest, opts ...grpc.CallOption) (*GetAddressListReply, error)
	// 单个地址详情
	GetAddressInfo(ctx context.Context, in *GetAddressInfoRequest, opts ...grpc.CallOption) (*GetAddressInfoReply, error)
	// 修改地址
	SetAddress(ctx context.Context, in *SetAddressRequest, opts ...grpc.CallOption) (*SetAddressReply, error)
	// 添加地址
	CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressReply, error)
	// 删除地址
	DeleteAddress(ctx context.Context, in *DeleteAddressRequest, opts ...grpc.CallOption) (*DeleteAddressReply, error)
}

type addressControllerClient struct {
	cc *grpc.ClientConn
}

func NewAddressControllerClient(cc *grpc.ClientConn) AddressControllerClient {
	return &addressControllerClient{cc}
}

func (c *addressControllerClient) GetAddressList(ctx context.Context, in *GetAddressListRequest, opts ...grpc.CallOption) (*GetAddressListReply, error) {
	out := new(GetAddressListReply)
	err := grpc.Invoke(ctx, "/user.pkg.rpc.protos.AddressController/GetAddressList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressControllerClient) GetAddressInfo(ctx context.Context, in *GetAddressInfoRequest, opts ...grpc.CallOption) (*GetAddressInfoReply, error) {
	out := new(GetAddressInfoReply)
	err := grpc.Invoke(ctx, "/user.pkg.rpc.protos.AddressController/GetAddressInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressControllerClient) SetAddress(ctx context.Context, in *SetAddressRequest, opts ...grpc.CallOption) (*SetAddressReply, error) {
	out := new(SetAddressReply)
	err := grpc.Invoke(ctx, "/user.pkg.rpc.protos.AddressController/SetAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressControllerClient) CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressReply, error) {
	out := new(CreateAddressReply)
	err := grpc.Invoke(ctx, "/user.pkg.rpc.protos.AddressController/CreateAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressControllerClient) DeleteAddress(ctx context.Context, in *DeleteAddressRequest, opts ...grpc.CallOption) (*DeleteAddressReply, error) {
	out := new(DeleteAddressReply)
	err := grpc.Invoke(ctx, "/user.pkg.rpc.protos.AddressController/DeleteAddress", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AddressController service

type AddressControllerServer interface {
	// 用户地址列表
	GetAddressList(context.Context, *GetAddressListRequest) (*GetAddressListReply, error)
	// 单个地址详情
	GetAddressInfo(context.Context, *GetAddressInfoRequest) (*GetAddressInfoReply, error)
	// 修改地址
	SetAddress(context.Context, *SetAddressRequest) (*SetAddressReply, error)
	// 添加地址
	CreateAddress(context.Context, *CreateAddressRequest) (*CreateAddressReply, error)
	// 删除地址
	DeleteAddress(context.Context, *DeleteAddressRequest) (*DeleteAddressReply, error)
}

func RegisterAddressControllerServer(s *grpc.Server, srv AddressControllerServer) {
	s.RegisterService(&_AddressController_serviceDesc, srv)
}

func _AddressController_GetAddressList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressControllerServer).GetAddressList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.pkg.rpc.protos.AddressController/GetAddressList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressControllerServer).GetAddressList(ctx, req.(*GetAddressListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressController_GetAddressInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressControllerServer).GetAddressInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.pkg.rpc.protos.AddressController/GetAddressInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressControllerServer).GetAddressInfo(ctx, req.(*GetAddressInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressController_SetAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressControllerServer).SetAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.pkg.rpc.protos.AddressController/SetAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressControllerServer).SetAddress(ctx, req.(*SetAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressController_CreateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressControllerServer).CreateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.pkg.rpc.protos.AddressController/CreateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressControllerServer).CreateAddress(ctx, req.(*CreateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressController_DeleteAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressControllerServer).DeleteAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.pkg.rpc.protos.AddressController/DeleteAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressControllerServer).DeleteAddress(ctx, req.(*DeleteAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddressController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.pkg.rpc.protos.AddressController",
	HandlerType: (*AddressControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAddressList",
			Handler:    _AddressController_GetAddressList_Handler,
		},
		{
			MethodName: "GetAddressInfo",
			Handler:    _AddressController_GetAddressInfo_Handler,
		},
		{
			MethodName: "SetAddress",
			Handler:    _AddressController_SetAddress_Handler,
		},
		{
			MethodName: "CreateAddress",
			Handler:    _AddressController_CreateAddress_Handler,
		},
		{
			MethodName: "DeleteAddress",
			Handler:    _AddressController_DeleteAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_address.proto",
}

func init() { proto.RegisterFile("user_address.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0x1d, 0x37, 0x1f, 0x93, 0xb6, 0x90, 0x6d, 0x40, 0x2b, 0xab, 0x87, 0xc8, 0x42, 0x10,
	0x10, 0x8a, 0x50, 0x90, 0xb8, 0xd3, 0x82, 0x50, 0x44, 0xe9, 0xc1, 0xbd, 0x21, 0x24, 0xe4, 0xda,
	0x43, 0xb0, 0x70, 0xbc, 0x66, 0xbd, 0x69, 0x95, 0xf2, 0x13, 0x38, 0xf2, 0x33, 0xf8, 0x93, 0x68,
	0x77, 0x1d, 0xc7, 0x4e, 0x1c, 0xd2, 0x48, 0x55, 0x4f, 0xde, 0x37, 0x7e, 0x33, 0xcf, 0x6f, 0x76,
	0xc6, 0x40, 0x66, 0x29, 0xf2, 0xaf, 0x5e, 0x10, 0x70, 0x4c, 0xd3, 0x61, 0xc2, 0x99, 0x60, 0xe4,
	0x48, 0xc6, 0x86, 0xc9, 0x8f, 0xc9, 0x90, 0x27, 0xbe, 0x8e, 0xa5, 0x76, 0x57, 0x11, 0x7d, 0x36,
	0x9d, 0xb2, 0x58, 0xc7, 0x9c, 0xbf, 0x26, 0x34, 0xdf, 0xea, 0x4c, 0x72, 0x08, 0x66, 0x18, 0x50,
	0xa3, 0x6f, 0x0c, 0x2c, 0xd7, 0x0c, 0x03, 0xf2, 0x18, 0x1a, 0x32, 0x61, 0x1c, 0x50, 0x53, 0xc5,
	0x32, 0x44, 0x1c, 0xd8, 0xe7, 0xe8, 0x63, 0x78, 0x85, 0xfc, 0xdc, 0x9b, 0x22, 0xad, 0xf7, 0x8d,
	0x41, 0xdb, 0x2d, 0xc5, 0x64, 0xee, 0x04, 0xe3, 0x00, 0x39, 0xb5, 0x74, 0xae, 0x46, 0x84, 0x42,
	0xd3, 0x67, 0xb3, 0x58, 0xf0, 0x39, 0xdd, 0x53, 0x69, 0x0b, 0x48, 0x6c, 0x68, 0x25, 0x9c, 0x5d,
	0x85, 0xb1, 0x8f, 0xb4, 0xa1, 0x5e, 0xe5, 0x98, 0x10, 0xb0, 0xfc, 0x50, 0xcc, 0x69, 0x53, 0xc5,
	0xd5, 0x59, 0xf2, 0x83, 0x30, 0x15, 0x3c, 0xf4, 0x05, 0x6d, 0x69, 0xfe, 0x02, 0x4b, 0x95, 0xac,
	0x1d, 0xb4, 0xad, 0x55, 0x32, 0x48, 0x1e, 0x42, 0x5d, 0x78, 0x13, 0x0a, 0x7d, 0x63, 0x70, 0xe0,
	0xca, 0xa3, 0xfc, 0xd2, 0x29, 0xbb, 0x0c, 0x23, 0xa4, 0x1d, 0x45, 0xcd, 0x90, 0xd4, 0x14, 0xf3,
	0x04, 0xe9, 0xbe, 0xa2, 0xaa, 0xb3, 0x73, 0x0d, 0x8f, 0x3e, 0xa0, 0xc8, 0xfa, 0x75, 0x16, 0xa6,
	0xc2, 0xc5, 0x9f, 0x33, 0x4c, 0x45, 0xa1, 0x55, 0x46, 0xa9, 0x55, 0x04, 0xac, 0xc4, 0x9b, 0x60,
	0xd6, 0x40, 0x75, 0x56, 0x46, 0xbd, 0x09, 0x5e, 0x84, 0x37, 0xba, 0x75, 0x96, 0x9b, 0x63, 0x59,
	0x27, 0xf2, 0x52, 0x31, 0x0e, 0x16, 0x6d, 0xd3, 0xc8, 0xf9, 0x6d, 0xc0, 0xd1, 0xaa, 0x72, 0x12,
	0xcd, 0xc9, 0x4b, 0xa8, 0x23, 0xe7, 0x4a, 0xb4, 0x33, 0xb2, 0x87, 0x15, 0x97, 0x3e, 0x7c, 0xcf,
	0x39, 0xe3, 0xae, 0xa4, 0x91, 0x57, 0x60, 0x45, 0x61, 0x2a, 0xa8, 0xd9, 0xaf, 0x0f, 0x3a, 0xa3,
	0xe3, 0x4a, 0x7a, 0x26, 0xe1, 0x2a, 0x26, 0xe9, 0xc1, 0x9e, 0xba, 0x9f, 0xec, 0x43, 0x35, 0x70,
	0x3e, 0x15, 0xdb, 0x30, 0x8e, 0xbf, 0xb1, 0x6d, 0x6d, 0x38, 0x86, 0x76, 0x76, 0x01, 0xf9, 0x30,
	0x2d, 0x03, 0xce, 0xaf, 0xa2, 0x37, 0x5d, 0x6e, 0x77, 0x6f, 0x6f, 0x96, 0x57, 0x6e, 0xaa, 0x8c,
	0xff, 0xdb, 0x5b, 0x90, 0x9d, 0x8f, 0xd0, 0xbd, 0xc8, 0xc5, 0x17, 0x3e, 0x0a, 0xc5, 0x8c, 0x5d,
	0x8a, 0x5d, 0xc3, 0x83, 0x62, 0xb1, 0xfb, 0x73, 0x71, 0x0e, 0xbd, 0x53, 0x8e, 0x9e, 0xc0, 0x3b,
	0x32, 0x72, 0x03, 0x64, 0xa5, 0xde, 0xfd, 0x79, 0x39, 0x83, 0xde, 0x3b, 0x8c, 0x70, 0xcd, 0x4b,
	0x69, 0x88, 0x8c, 0x95, 0x21, 0xda, 0xf4, 0xb3, 0x72, 0x4e, 0x80, 0xac, 0x54, 0xdb, 0xd9, 0xc9,
	0xe8, 0x8f, 0x05, 0xdd, 0x2c, 0xfd, 0x94, 0xc5, 0x82, 0xb3, 0x28, 0x42, 0x4e, 0xbe, 0xc3, 0x61,
	0x79, 0x25, 0xc9, 0x8b, 0xca, 0x42, 0x95, 0x7f, 0x0c, 0x7b, 0x70, 0x2b, 0x6e, 0x12, 0xcd, 0x9d,
	0x5a, 0x59, 0x49, 0x2e, 0xc8, 0x56, 0xa5, 0xc2, 0x52, 0x6e, 0x55, 0xca, 0x37, 0xce, 0xa9, 0x91,
	0x2f, 0x00, 0xcb, 0x01, 0x26, 0x4f, 0x2b, 0x33, 0xd7, 0xd6, 0xc5, 0x7e, 0xb2, 0x95, 0xa7, 0xab,
	0x23, 0x1c, 0x94, 0xa6, 0x8a, 0x3c, 0xaf, 0x4c, 0xac, 0x9a, 0x64, 0xfb, 0xd9, 0x6d, 0xa8, 0xb9,
	0x4c, 0xe9, 0xca, 0x37, 0xc8, 0x54, 0x0d, 0xd9, 0x06, 0x99, 0xf5, 0x09, 0x72, 0x6a, 0x27, 0xad,
	0xcf, 0x0d, 0xfd, 0xfa, 0x52, 0x3f, 0x5f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x97, 0x4f, 0x45,
	0xde, 0x89, 0x07, 0x00, 0x00,
}
